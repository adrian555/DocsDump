{"definitions":{"Artifacts":{"description":"Artifacts structure.","properties":{"files":{"description":"File location and metadata for artifacts.","items":{"$ref":"#/definitions/FileInfo"},"type":"array"},"root_uri":{"description":"Root artifact directory for the run.","type":"string"}},"type":"object"},"Experiment":{"description":"Experiment","properties":{"artifact_location":{"description":"Location where artifacts for this experiment are stored.","type":"string"},"experiment_id":{"description":"Unique identifier for the experiment.","format":"int64","type":"integer"},"name":{"description":"Human readable name that identifies this experiment.","type":"string"}},"type":"object"},"ExperimentBody":{"properties":{"artifact_location":{"description":"Location where all artifacts for this experiment are stored. If not provided, the remote server will select an appropriate default.","type":"string"},"name":{"description":"Experiment name. This field is required.","type":"string"}},"type":"object"},"ExperimentDetails":{"properties":{"experiment":{"$ref":"#/definitions/Experiment","description":"Returns experiment details."},"runs":{"description":"All (max limit to be imposed) runs associated with this experiment.","items":{"$ref":"#/definitions/RunInfoBase"},"type":"array"}},"type":"object"},"ExperimentId":{"properties":{"experiment_id":{"description":"Unique identifier for created experiment.","format":"int64","type":"integer"}},"type":"object"},"Experiments":{"properties":{"experiments":{"items":{"$ref":"#/definitions/Experiment"},"type":"array"}},"type":"object"},"FileInfo":{"description":"Metadata of a single artifact file or directory.","properties":{"file_size":{"description":"Size in bytes. Unset for directories.","format":"int64","type":"integer"},"is_dir":{"description":"Whether the file is a directory.","type":"boolean"},"path":{"description":"Path relative to the root artifact directory run.","type":"string"}},"type":"object"},"FloatClause":{"description":"Float clause.","properties":{"comparator":{"description":"OneOf (\">\", \">=\", \"==\", \"!=\", \"<=\", \"<\")","type":"string"},"value":{"description":"Float value for comparison.","format":"float","type":"number"}},"type":"object"},"Metric":{"description":"Metric associated with a run, represented as a key-value pair.","properties":{"metric":{"$ref":"#/definitions/MetricBase","type":"object"}},"type":"object"},"MetricBase":{"description":"Metric associated with a run, represented as a key-value pair.","properties":{"key":{"description":"Key identifying this metric.","type":"string"},"timestamp":{"description":"The timestamp at which this metric was recorded.","format":"int64","type":"integer"},"value":{"description":"Value associated with this metric.","format":"float","type":"number"}},"type":"object"},"MetricBody":{"description":"Metric with metadata for logging.","properties":{"key":{"description":"Name of the metric. This field is required.","type":"string"},"run_uuid":{"description":"ID of the run under which to log the metric. This field is required.","type":"string"},"timestamp":{"description":"Unix timestamp in milliseconds at the time metric was logged.This field is required.","format":"int64","type":"integer"},"value":{"description":"Float value of the metric being logged. This field is required.","format":"float","type":"number"}},"type":"object"},"MetricHistory":{"description":"Metric historical values.","properties":{"metrics":{"items":{"$ref":"#/definitions/MetricBase"},"type":"array"}},"type":"object"},"MetricSearchExpression":{"description":"Metric search expression.","properties":{"metric":{"description":"Metric search expression.","properties":{"float":{"$ref":"#/definitions/FloatClause","description":"Float clause for comparison."},"key":{"description":"Metric key for search","type":"string"}},"type":"object"}},"type":"object"},"ParamBase":{"description":"Param associated with a run.","properties":{"key":{"description":"Key identifying this param.","type":"string"},"value":{"description":"Value associated with this param.","type":"string"}},"type":"object"},"ParamBody":{"description":"Parameter with metadata for logging.","properties":{"key":{"description":"Name of the param. This field is required.","type":"string"},"run_uuid":{"description":"ID of the run under which to log the param. This field is required.","type":"string"},"value":{"description":"String value of the param being logged. This field is required.","type":"string"}},"type":"object"},"Parameter":{"description":"Parameters associated with a run: key-value pair of strings.","properties":{"parameter":{"$ref":"#/definitions/ParamBase","type":"object"}},"type":"object"},"ParameterSearchExpression":{"description":"Parameter search expression.","properties":{"parameter":{"description":"Parameter search expression.","properties":{"key":{"description":"Param key for search","type":"string"},"string":{"$ref":"#/definitions/StringClause","description":"String clause for comparison."}},"type":"object"}},"type":"object"},"Run":{"description":"Metadata of the newly created run.","properties":{"run":{"$ref":"#/definitions/RunInfo","type":"object"}},"type":"object"},"RunData":{"description":"Run data (metrics, params, etc).","properties":{"metrics":{"description":"Metrics.","items":{"$ref":"#/definitions/Metric"},"type":"array"},"params":{"description":"Params.","items":{"$ref":"#/definitions/ParamBase"},"type":"array"}},"type":"object"},"RunInfo":{"properties":{"info":{"$ref":"#/definitions/RunInfoBase","type":"object"}},"type":"object"},"RunInfo2":{"properties":{"run_info":{"$ref":"#/definitions/RunInfoBase","type":"object"}},"type":"object"},"RunInfoAndData":{"description":"Run with RunInfo and RunData.","properties":{"run":{"$ref":"#/definitions/RunInfoAndDataBase","type":"object"}},"type":"object"},"RunInfoAndDataBase":{"description":"A single run with RunInfo and RunData.","properties":{"data":{"$ref":"#/definitions/RunData","description":"Run data."},"info":{"$ref":"#/definitions/RunInfoBase","description":"Run metadata."}},"type":"object"},"RunInfoBase":{"description":"Metadata of a single run.","properties":{"artifact_uri":{"description":"URI of the directory where artifacts should be uploaded. This can be a local path (starting with \"/\"), or a distributed file system (DFS) path, like s3://bucket/directoryor dbfs:/my/directory. If not set, the local ./mlruns directory is chosen.","type":"string"},"end_time":{"description":"Unix timestamp of when the run ended in milliseconds.","format":"int64","type":"integer"},"entry_point_name":{"description":"Name of the entry point for the run.","type":"string"},"experiment_id":{"description":"The experiment ID.","format":"int64","type":"integer"},"name":{"description":"Human readable name that identifies this run.","type":"string"},"run_uuid":{"description":"Unique identifier for the run.","type":"string"},"source_name":{"description":"Source identifier: GitHub URL, name of notebook, name of job, etc.","type":"string"},"source_type":{"$ref":"#/definitions/SourceType","description":"Source type"},"source_version":{"description":"Git commit of the code used for the run.","type":"string"},"start_time":{"description":"Unix timestamp of when the run started in milliseconds.","format":"int64","type":"integer"},"status":{"$ref":"#/definitions/RunStatus","description":"Current status of the run."},"tags":{"description":"Additional metadata key-value pairs.","items":{"$ref":"#/definitions/RunTag"},"type":"array"},"user_id":{"description":"User who initiated the run.","type":"string"}},"type":"object"},"RunInfoBody":{"properties":{"entry_point_name":{"description":"Name of the project entry point associated with the current run, if any.","type":"string"},"experiment_id":{"description":"ID of the associated experiment.","format":"int64","type":"integer"},"run_name":{"description":"Human readable name for a run.","type":"string"},"source_name":{"description":"String descriptor for the run's source. For example, name or description of a notebook, or the URL or path to a project.","type":"string"},"source_type":{"$ref":"#/definitions/SourceType","description":"Originating source for the run."},"source_version":{"description":"Git version of the source code used to create run.","type":"string"},"start_time":{"description":"Unix timestamp of when the run started in milliseconds.","format":"int64","type":"integer"},"tags":{"description":"Additional metadata for run.","items":{"$ref":"#/definitions/RunTag"},"type":"array"},"user_id":{"description":"ID of the user executing the run.","type":"string"}},"type":"object"},"RunStatus":{"description":"Status of a run.\n* RUNNING - Has been initiated.\n* SCHEDULED - Scheduled to run at a later time.\n* FINISHED - Run has completed.\n* FAILED - Execution failed.\n* KILLED - Run killed by user.","enum":["RUNNING","SCHEDULED","FINISHED","FAILED","KILLED"],"type":"string"},"RunTag":{"description":"Tag for a run.","properties":{"key":{"description":"The tag key.","type":"string"},"value":{"description":"The tag value.","type":"string"}},"type":"object"},"Runs":{"description":"Run with RunInfo and RunData.","properties":{"runs":{"items":{"$ref":"#/definitions/RunInfoAndDataBase"},"type":"array"}},"type":"object"},"SourceType":{"description":"Description of the source that generated a run.\n* NOTEBOOK - Within Databricks Notebook environment.\n* JOB - Scheduled or Run Now Job.\n* PROJECT - As a prepackaged project: either a docker image or github source, ... etc.\n* LOCAL - Local run: Using CLI, IDE, or local notebook.\n* UNKNOWN - Unknown source type.","enum":["NOTEBOOK","JOB","PROJECT","LOCAL","UNKNOWN"],"type":"string"},"StringClause":{"description":"String clause","properties":{"comparator":{"description":"OneOf (\"==\", \"!=\", \"~\")","type":"string"},"value":{"description":"String value for comparison.","type":"string"}},"type":"object"},"UpdateRunBody":{"properties":{"end_time":{"description":"Unix timestamp of when the run ended in milliseconds.","format":"int64","type":"integer"},"run_uuid":{"description":"Run UUID. This field is required.","type":"string"},"status":{"$ref":"#/definitions/RunStatus","description":"Updated status of the run."}},"type":"object"}},"info":{"description":"powered by Flasgger","termsOfService":"/tos","title":"A swagger API","version":"0.0.1"},"paths":{"/ajax-api/2.0/preview/mlflow/artifacts/list":{"get":{"description":"Takes an optional artifact_path prefix - if specified, the response will contain only<br/>artifacts with the specified prefix..<br/>","parameters":[{"description":"ID of the run whose artifacts to list.","in":"query","name":"run_uuid","required":true,"type":"string"},{"description":"Filter artifacts matching this path (a relative path from the root artifact directory).","in":"query","name":"path","required":true,"type":"string"}],"responses":{"200":{"$ref":"#/definitions/Artifacts","description":"Artifacts array"}},"summary":"List artifacts for a given run."}},"/ajax-api/2.0/preview/mlflow/experiments/create":{"post":{"description":"Returns the ID of the newly created experiment. Validates that another experiment with<br/>the same name does not already exist and fails if another experiment with the same name<br/>already exists.<br/>Throws RESOURCE_ALREADY_EXISTS if a experiment with the given name exists.<br/>","parameters":[{"in":"body","name":"experiment","required":["name"],"schema":{"$ref":"#/definitions/ExperimentBody"}}],"responses":{"200":{"$ref":"#/definitions/ExperimentId","description":"Unique identifier for created experiment."}},"summary":"Create an experiment with a name."}},"/ajax-api/2.0/preview/mlflow/experiments/get":{"get":{"parameters":[{"description":"Identifier to get an experiment. This field is required.","format":"int64","in":"query","name":"experiment_id","required":true,"type":"integer"}],"responses":{"200":{"$ref":"#/definitions/ExperimentDetails","description":"Experiment details."}},"summary":"Get metadata for an experiment and a list of runs for the experiment."}},"/ajax-api/2.0/preview/mlflow/experiments/list":{"get":{"responses":{"200":{"$ref":"#/definitions/Experiments","description":"All experiments"}},"summary":"Get a list of all experiments."}},"/ajax-api/2.0/preview/mlflow/metrics/get":{"get":{"description":"For a run, if this metric is logged more than once, this API retrieves only<br/>the latest value logged.<br/>","parameters":[{"description":"ID of the run from which to retrieve the metric value. This field is required.","in":"query","name":"run_uuid","required":true,"type":"string"},{"description":"Name of the metric. This field is required.","in":"query","name":"metric_key","required":true,"type":"string"}],"responses":{"200":{"$ref":"#/definitions/Metric","description":"Latest reported value of the specified metric."}},"summary":"Retrieve the logged value for a metric during a run."}},"/ajax-api/2.0/preview/mlflow/metrics/get-history":{"get":{"parameters":[{"description":"ID of the run from which to fetch metric values. This field is required.","in":"query","name":"run_uuid","required":true,"type":"string"},{"description":"Name of the metric. This field is required.","in":"query","name":"metric_key","required":true,"type":"string"}],"responses":{"200":{"$ref":"#/definitions/MetricHistory","description":"All logged values for this metric."}},"summary":"Returns a list of all values for the specified metric for a given run."}},"/ajax-api/2.0/preview/mlflow/params/get":{"get":{"parameters":[{"description":"ID of the run from which to retrieve the param value. This field is required.","in":"query","name":"run_uuid","required":true,"type":"string"},{"description":"Name of the param. This field is required.","in":"query","name":"param_name","required":true,"type":"string"}],"responses":{"200":{"$ref":"#/definitions/Parameter","description":"Param key-value pair."}},"summary":"Get a param value."}},"/ajax-api/2.0/preview/mlflow/runs/create":{"post":{"description":"A run is usually a single execution of a machine learning or data ETL pipeline.<br/>MLflow uses runs to track Param, Metric, and RunTag, associated with a single execution.<br/>","parameters":[{"description":"RunInfo specifies the details of a run.","in":"body","name":"runinfo","required":true,"schema":{"$ref":"#/definitions/RunInfoBody"}}],"responses":{"200":{"$ref":"#/definitions/Run","description":"Metadata of the newly created run."}},"summary":"Create a new run within an experiment."}},"/ajax-api/2.0/preview/mlflow/runs/get":{"get":{"description":"Only last logged value for each metric is returned.<br/>","parameters":[{"description":"ID of the run to fetch. This field is required.","in":"query","name":"run_uuid","required":true,"type":"string"}],"responses":{"200":{"$ref":"#/definitions/RunInfoAndData","description":"Run details."}},"summary":"Get metadata, params, tags, and metrics for run."}},"/ajax-api/2.0/preview/mlflow/runs/log-metric":{"post":{"description":"A metric is a key-value pair (string key, float value) with an associated timestamp.<br/>Within a run, a metric may be logged multiple times.<br/>","parameters":[{"description":"Metric metadata to be logged.","in":"body","name":"metric","required":true,"schema":{"$ref":"#/definitions/MetricBody"}}],"responses":{"200":{"description":"OK"}},"summary":"Log a metric for a run (e.g. ML model accuracy)."}},"/ajax-api/2.0/preview/mlflow/runs/log-parameter":{"post":{"description":"Examples are hyperparameters used for ML model training, or constant dates and values used<br/>in an ETL pipeline. A param is a key-value pair (string key, string value). A param may<br/>only be logged once for a given run.<br/>","parameters":[{"description":"Parameter metadata to be logged.","in":"body","name":"parameter","required":true,"schema":{"$ref":"#/definitions/ParamBody"}}],"responses":{"200":{"description":"OK."}},"summary":"Log a param used for this run."}},"/ajax-api/2.0/preview/mlflow/runs/search":{"get":{"description":"Search expressions can use Metric and Param keys.<br/>","parameters":[{"description":"Request body with search expressions.","in":"body","name":"search_body","properties":{"anded_expressions":{"description":"Expressions describing runs (AND-ed together when filtering runs).","items":{"oneOf":[{"$ref":"#/definitions/ParameterSearchExpression"},{"$ref":"#/definitions/MetricSearchExpression"}]},"type":"array"},"exeriment_ids":{"description":"List of experiment IDs to search over.","items":{"format":"int64","type":"integer"},"type":"array"}},"required":["experiment_ids"],"type":"object"}],"responses":{"200":{"$ref":"#/definitions/Runs","description":"Runs that match the search criteria."}},"summary":"Search for runs that satisfy expressions."},"post":{"description":"Search expressions can use Metric and Param keys.<br/>","parameters":[{"description":"Request body with search expressions.","in":"body","name":"search_body","properties":{"anded_expressions":{"description":"Expressions describing runs (AND-ed together when filtering runs).","items":{"oneOf":[{"$ref":"#/definitions/ParameterSearchExpression"},{"$ref":"#/definitions/MetricSearchExpression"}]},"type":"array"},"exeriment_ids":{"description":"List of experiment IDs to search over.","items":{"format":"int64","type":"integer"},"type":"array"}},"required":["experiment_ids"],"type":"object"}],"responses":{"200":{"$ref":"#/definitions/Runs","description":"Runs that match the search criteria."}},"summary":"Search for runs that satisfy expressions."}},"/ajax-api/2.0/preview/mlflow/runs/update":{"post":{"parameters":[{"description":"Run uuid and the status to be updated.","in":"body","name":"run_to_update","schema":{"$ref":"#/definitions/UpdateRunBody"}}],"responses":{"200":{"$ref":"#/definitions/RunInfo2","description":"Updated metadata of the run."}},"summary":"Update run."}},"/api/2.0/preview/mlflow/artifacts/list":{"get":{"description":"Takes an optional artifact_path prefix - if specified, the response will contain only<br/>artifacts with the specified prefix..<br/>","parameters":[{"description":"ID of the run whose artifacts to list.","in":"query","name":"run_uuid","required":true,"type":"string"},{"description":"Filter artifacts matching this path (a relative path from the root artifact directory).","in":"query","name":"path","required":true,"type":"string"}],"responses":{"200":{"$ref":"#/definitions/Artifacts","description":"Artifacts array"}},"summary":"List artifacts for a given run."}},"/api/2.0/preview/mlflow/experiments/create":{"post":{"description":"Returns the ID of the newly created experiment. Validates that another experiment with<br/>the same name does not already exist and fails if another experiment with the same name<br/>already exists.<br/>Throws RESOURCE_ALREADY_EXISTS if a experiment with the given name exists.<br/>","parameters":[{"in":"body","name":"experiment","required":["name"],"schema":{"$ref":"#/definitions/ExperimentBody"}}],"responses":{"200":{"$ref":"#/definitions/ExperimentId","description":"Unique identifier for created experiment."}},"summary":"Create an experiment with a name."}},"/api/2.0/preview/mlflow/experiments/get":{"get":{"parameters":[{"description":"Identifier to get an experiment. This field is required.","format":"int64","in":"query","name":"experiment_id","required":true,"type":"integer"}],"responses":{"200":{"$ref":"#/definitions/ExperimentDetails","description":"Experiment details."}},"summary":"Get metadata for an experiment and a list of runs for the experiment."}},"/api/2.0/preview/mlflow/experiments/list":{"get":{"responses":{"200":{"$ref":"#/definitions/Experiments","description":"All experiments"}},"summary":"Get a list of all experiments."}},"/api/2.0/preview/mlflow/metrics/get":{"get":{"description":"For a run, if this metric is logged more than once, this API retrieves only<br/>the latest value logged.<br/>","parameters":[{"description":"ID of the run from which to retrieve the metric value. This field is required.","in":"query","name":"run_uuid","required":true,"type":"string"},{"description":"Name of the metric. This field is required.","in":"query","name":"metric_key","required":true,"type":"string"}],"responses":{"200":{"$ref":"#/definitions/Metric","description":"Latest reported value of the specified metric."}},"summary":"Retrieve the logged value for a metric during a run."}},"/api/2.0/preview/mlflow/metrics/get-history":{"get":{"parameters":[{"description":"ID of the run from which to fetch metric values. This field is required.","in":"query","name":"run_uuid","required":true,"type":"string"},{"description":"Name of the metric. This field is required.","in":"query","name":"metric_key","required":true,"type":"string"}],"responses":{"200":{"$ref":"#/definitions/MetricHistory","description":"All logged values for this metric."}},"summary":"Returns a list of all values for the specified metric for a given run."}},"/api/2.0/preview/mlflow/params/get":{"get":{"parameters":[{"description":"ID of the run from which to retrieve the param value. This field is required.","in":"query","name":"run_uuid","required":true,"type":"string"},{"description":"Name of the param. This field is required.","in":"query","name":"param_name","required":true,"type":"string"}],"responses":{"200":{"$ref":"#/definitions/Parameter","description":"Param key-value pair."}},"summary":"Get a param value."}},"/api/2.0/preview/mlflow/runs/create":{"post":{"description":"A run is usually a single execution of a machine learning or data ETL pipeline.<br/>MLflow uses runs to track Param, Metric, and RunTag, associated with a single execution.<br/>","parameters":[{"description":"RunInfo specifies the details of a run.","in":"body","name":"runinfo","required":true,"schema":{"$ref":"#/definitions/RunInfoBody"}}],"responses":{"200":{"$ref":"#/definitions/Run","description":"Metadata of the newly created run."}},"summary":"Create a new run within an experiment."}},"/api/2.0/preview/mlflow/runs/get":{"get":{"description":"Only last logged value for each metric is returned.<br/>","parameters":[{"description":"ID of the run to fetch. This field is required.","in":"query","name":"run_uuid","required":true,"type":"string"}],"responses":{"200":{"$ref":"#/definitions/RunInfoAndData","description":"Run details."}},"summary":"Get metadata, params, tags, and metrics for run."}},"/api/2.0/preview/mlflow/runs/log-metric":{"post":{"description":"A metric is a key-value pair (string key, float value) with an associated timestamp.<br/>Within a run, a metric may be logged multiple times.<br/>","parameters":[{"description":"Metric metadata to be logged.","in":"body","name":"metric","required":true,"schema":{"$ref":"#/definitions/MetricBody"}}],"responses":{"200":{"description":"OK"}},"summary":"Log a metric for a run (e.g. ML model accuracy)."}},"/api/2.0/preview/mlflow/runs/log-parameter":{"post":{"description":"Examples are hyperparameters used for ML model training, or constant dates and values used<br/>in an ETL pipeline. A param is a key-value pair (string key, string value). A param may<br/>only be logged once for a given run.<br/>","parameters":[{"description":"Parameter metadata to be logged.","in":"body","name":"parameter","required":true,"schema":{"$ref":"#/definitions/ParamBody"}}],"responses":{"200":{"description":"OK."}},"summary":"Log a param used for this run."}},"/api/2.0/preview/mlflow/runs/search":{"get":{"description":"Search expressions can use Metric and Param keys.<br/>","parameters":[{"description":"Request body with search expressions.","in":"body","name":"search_body","properties":{"anded_expressions":{"description":"Expressions describing runs (AND-ed together when filtering runs).","items":{"oneOf":[{"$ref":"#/definitions/ParameterSearchExpression"},{"$ref":"#/definitions/MetricSearchExpression"}]},"type":"array"},"exeriment_ids":{"description":"List of experiment IDs to search over.","items":{"format":"int64","type":"integer"},"type":"array"}},"required":["experiment_ids"],"type":"object"}],"responses":{"200":{"$ref":"#/definitions/Runs","description":"Runs that match the search criteria."}},"summary":"Search for runs that satisfy expressions."},"post":{"description":"Search expressions can use Metric and Param keys.<br/>","parameters":[{"description":"Request body with search expressions.","in":"body","name":"search_body","properties":{"anded_expressions":{"description":"Expressions describing runs (AND-ed together when filtering runs).","items":{"oneOf":[{"$ref":"#/definitions/ParameterSearchExpression"},{"$ref":"#/definitions/MetricSearchExpression"}]},"type":"array"},"exeriment_ids":{"description":"List of experiment IDs to search over.","items":{"format":"int64","type":"integer"},"type":"array"}},"required":["experiment_ids"],"type":"object"}],"responses":{"200":{"$ref":"#/definitions/Runs","description":"Runs that match the search criteria."}},"summary":"Search for runs that satisfy expressions."}},"/api/2.0/preview/mlflow/runs/update":{"post":{"parameters":[{"description":"Run uuid and the status to be updated.","in":"body","name":"run_to_update","schema":{"$ref":"#/definitions/UpdateRunBody"}}],"responses":{"200":{"$ref":"#/definitions/RunInfo2","description":"Updated metadata of the run."}},"summary":"Update run."}}},"swagger":"2.0"}
